{"version":3,"sources":["webpack:///webpack/bootstrap 4c3285314cd19e621c7f","webpack:///./entry.js","webpack:///./constants.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAC;;AAED;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH,0DAAyD,2DAA2D;AACpH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 4c3285314cd19e621c7f\n **/","const Constants = require('./constants');\n\nlet canvasBoard = document.getElementById(\"canvasBoard\");\nlet ctx = canvasBoard.getContext(\"2d\");\nlet canvasPower = document.getElementById(\"canvasPower\");\nlet ctxPower = canvasPower.getContext(\"2d\");\nlet canvasAim = document.getElementById(\"canvasAim\");\nlet ctxAim = canvasBoard.getContext(\"2d\");\n\nlet ballRadius = Constants.BALL_RADIUS;\nlet xPos = Constants.CANVAS_WIDTH/2;\nlet yPos = 0 + ballRadius;\nlet yHoleStart = Constants.CANVAS_HEIGHT - (3*Constants.HOLE_RADIUS);\nlet holeRadius = Constants.HOLE_RADIUS;\nlet strokes = 0;\nlet mouseX, mouseY;\nwindow.mouseX\nwindow.mouseY\n\ncanvasBoard.addEventListener(\"mousedown\", (function(e) {\n    filterClick(e);\n}));\n\nwindow.addEventListener(\"mousemove\", (function(e) {\n  updatePos(e);\n}));\n\nfunction filterClick(e) {\n  e.preventDefault();\n  if (((xPos - ballRadius) <= e.offsetX && e.offsetX <= (xPos + ballRadius)) && ((yPos - ballRadius) <= e.offsetY && e.offsetY <= (yPos + ballRadius))) {\n    // debugger//run the function to get speed and direction\n    let x = window.mouseX;\n    let y = window.mouseY;\n    swing(x, y)\n  }\n};\n\nfunction strikeBall(xStart, yStart, xEnd, yEnd) {\n  console.log(\"striking ball\");\n  ctxPower.clearRect(0, 0, Constants.CP_WIDTH, Constants.CP_HEIGHT);\n}\n\nfunction updatePos(e) {\n  window.mouseX = e.screenX;\n  window.mouseY = e.screenY;\n}\n\nfunction swing(xInit, yInit) {\n  this.addEventListener(\"mouseup\", (function() {\n    clearInterval(window.drawHitDetailInterval);\n    strikeBall(xInit, yInit, window.mouseX, window.mouseY)\n  }));\n\n  window.drawHitDetailInterval = setInterval(function() {drawHitDetails(xInit, yInit, window.mouseX, window.mouseY)}, 20);\n};\n\nfunction draw() {\n  ctx.clearRect(0, 0, Constants.CANVAS_WIDTH, Constants.CANVAS_HEIGHT);\n  drawBall();\n  drawHole();\n}\n\nfunction drawBall() {\n  ctx.beginPath();\n  ctx.arc(xPos, yPos, ballRadius, 0, Math.PI*2);\n  ctx.fillStyle = \"white\";\n  ctx.fill();\n  ctx.closePath();\n  // setDirection();\n  // setInitialSpeed();\n};\n\nfunction drawHole() {\n  ctx.beginPath();\n  ctx.arc(xPos, yHoleStart, holeRadius, 0, Math.PI*2);\n  ctx.fillStyle = \"black\";\n  ctx.fill();\n  ctx.closePath\n}\n\nfunction drawHitDetails(xPos, yPos, xEnd, yEnd) {\n  // if (xEnd === undefined || yEnd === undefined) {\n  //   xEnd = xPos;\n  //   yEnd = yPos;\n  // }\n  ctxPower.clearRect(0, 0, Constants.CP_WIDTH, Constants.CP_HEIGHT);\n  let xDif = (xEnd > xPos) ? (xEnd - xPos) : (xPos - xEnd);\n  let yDif = (yEnd > yPos) ? (yEnd - yPos) : (yPos - yEnd);\n  let pyth = (xDif * xDif) + (yDif * yDif);\n  let tot = Math.floor(Math.sqrt(pyth));\n\n  ctxPower.beginPath();\n  ctxPower.rect(0, 0, Constants.CP_WIDTH, (tot * 2));\n  ctxPower.fillStyle = \"red\";\n  ctxPower.fill();\n  ctxPower.closePath();\n}\n\nsetInterval(draw, 100);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./entry.js\n ** module id = 0\n ** module chunks = 0\n **/","module.exports = {\n  CANVAS_WIDTH: 400,\n  CANVAS_HEIGHT: 600,\n  BALL_RADIUS: 10,\n  HOLE_RADIUS: 15,\n  CP_WIDTH: 100,\n  CP_HEIGHT: 300, \n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./constants.js\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}